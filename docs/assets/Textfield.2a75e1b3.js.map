{"version":3,"file":"Textfield.2a75e1b3.js","sources":["../../src/components/Textfield/Textfield.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport {\n  computed,\n  reactive,\n  ref,\n  watch,\n  type CSSProperties,\n  type HTMLAttributes,\n  type InputHTMLAttributes,\n  type LabelHTMLAttributes,\n} from 'vue';\nimport './textfield.css';\nimport Icon from '../Icon/Icon.vue';\nimport Label from '../Label/Label.vue';\n// import { vFocus } from '../../directives';\nexport interface Props {\n  /**\n   * id of the textfield\n   * @type HTMLAttributes['id']\n   * @default ''\n   * @example\n   * <Textfield id=\"textfield\" />\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id\n   */\n  id: HTMLAttributes['id'];\n  /**\n   * Input type\n   * @type 'text' | 'password' | 'email' | 'number' | 'tel' | 'url'\n   * @default 'text'\n   * @example\n   * <Textfield type=\"password\" />\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#input_types\n   */\n  type: 'text' | 'password' | 'email' | 'number' | 'tel' | 'url';\n\n  /**\n   * Input value\n   * @type InputHTMLAttributes['value'];\n   * @default ''\n   * @example\n   * <Textfield modelValue=\"Hello\" />\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#value\n   */\n  modelValue?: InputHTMLAttributes['value'];\n\n  /**\n   * label of the textfield\n   * @type LabelHTMLAttributes['label']\n   * @default ''\n   * @example\n   * <Textfield label=\"Textfield\" />\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label\n   */\n  label?: LabelHTMLAttributes['for'];\n\n  /**\n   * Placeholder text\n   * @type InputHTMLAttributes['placeholder'];\n   * @default ''\n   * @example\n   * <Textfield placeholder=\"Placeholder\" />\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#placeholder\n   */\n  placeholder?: InputHTMLAttributes['placeholder'];\n\n  /**\n   * Error message\n   * @type string\n   * @default ''\n   * @example\n   * <Textfield errorMsg=\"This is an error\" />\n   */\n  errorMsg?: string;\n\n  /**\n   * Hint text\n   * @type string\n   * @default ''\n   * @example\n   * <Textfield hint=\"This is a hint\" />\n   */\n  hint?: string;\n\n  /**\n   * Icon to prepend\n   * @type string\n   * @default ''\n   * @example\n   * <Textfield prependIcon=\"lock_outline\" />\n   */\n  prependIcon?: string;\n\n  /**\n   * Icon to append\n   * @type string\n   * @default ''\n   * @example\n   * <Textfield appendIcon=\"lock_outline\" />\n   */\n  appendIcon?: string;\n\n  /**\n   * Color of the icon\n   * @type CSSProperties['color']\n   * @default ''\n   * @example\n   * <Textfield iconColor=\"red\" />\n   */\n  iconColor?: CSSProperties['color'];\n\n  /**\n   * Input disabled state\n   * @type InputHTMLAttributes['disabled']\n   * @default false\n   * @example\n   * <Textfield disabled=\"true\" />\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#disabled\n   */\n  disabled?: InputHTMLAttributes['disabled'];\n\n  /**\n   * Input loading state\n   * @type boolean\n   * @default false\n   * @example\n   * <Textfield loading=\"true\" />\n   */\n  loading?: boolean;\n\n  /**\n   * Input clearable state\n   * @type boolean\n   * @default false\n   * @example\n   * <Textfield clearable=\"true\" />\n   */\n  clearable?: boolean;\n}\nconst inputRef = ref<HTMLInputElement>();\nconst props = withDefaults(defineProps<Props>(), {\n  id: '',\n  type: 'text',\n  modelValue: '',\n  label: '',\n  placeholder: '',\n  errorMsg: '',\n  hint: '',\n  prependIcon: '',\n  appendIcon: '',\n  iconColor: '',\n  disabled: false,\n  loading: false,\n  clearable: false,\n});\nconst emit = defineEmits([\n  'update:modelValue',\n  'focus',\n  'blur',\n  'click:icon',\n  'click:clear',\n]);\nconst state = reactive({\n  value: '',\n});\nconst typeOfInputRef = ref(props.type);\nconst prependIconsOfType = {\n  password: 'lock_outline',\n  email: 'mail_outline',\n  tel: 'phone',\n  url: 'link',\n  number: '123',\n  text: '',\n};\nconst isFocused = ref(false);\nconst isFilled = computed(() => !!state.value);\nconst classes = computed(() => {\n  const { disabled, loading, clearable, errorMsg } = props;\n  return {\n    textfield: true,\n    'textfield--error': errorMsg?.length,\n    'textfield--loading': loading,\n    'textfield--disabled': disabled,\n    'textfield--clearable': clearable,\n    'textfield--focus': isFocused.value,\n    'textfield--filled': isFilled.value,\n  };\n});\nconst prependIconClasses = computed(() => {\n  return {\n    'textfield__prepend-icon': true,\n    'textfield__prepend-icon--loading': props.loading,\n    'textfield__prepend-icon--error': hasErrorMsg.value && isFilled.value,\n  };\n});\nconst appendIconClasses = computed(() => {\n  return {\n    'textfield__append-icon': true,\n    'textfield__append-icon--clear': hasClear.value,\n    'textfield__append-icon--error': hasErrorMsg.value,\n  };\n});\nconst hasValue = computed(() => {\n  return state.value.length > 0;\n});\nconst hasErrorMsg = computed(() => {\n  return props.errorMsg?.length;\n});\nconst hasClear = computed(() => {\n  return props.clearable && hasValue.value;\n});\nconst prependIconName = computed(() => {\n  const { prependIcon, type } = props;\n  if (prependIcon) return prependIcon;\n  return prependIconsOfType[type];\n});\nconst appendIconName = computed(() => {\n  const { appendIcon, type } = props;\n  if (hasErrorMsg.value) return 'error_outline';\n  if (hasClear.value && ['text', 'email'].includes(type)) return 'clear';\n  if (type === 'password' && typeOfInputRef.value === 'password')\n    return 'visibility';\n  if (type === 'password' && typeOfInputRef.value === 'text')\n    return 'visibility_off';\n  return appendIcon;\n});\n/**\n * @description - focus event handler\n */\nconst onFocus = () => {\n  isFocused.value = true;\n  emit('focus', {\n    value: state.value,\n  });\n};\n/**\n * @description - blur event handler\n */\nconst onBlur = () => {\n  isFocused.value = false;\n  emit('blur', {\n    value: state.value,\n  });\n};\n/**\n * @description - Emit click event with value of append icon\n * @returns {void}\n */\nconst clickIcon = () => {\n  if (hasClear.value) {\n    state.value = '';\n    inputRef.value?.focus();\n    emit('click:clear', {\n      value: state.value,\n    });\n    return;\n  }\n  emit('click:icon', {\n    value: state.value,\n  });\n  setPassType();\n};\n/**\n * @description - Set type of input to password or text\n * @returns {void}\n */\nconst setPassType = () => {\n  typeOfInputRef.value =\n    typeOfInputRef.value === 'password' ? 'text' : 'password';\n};\n/**\n * @description - Emit input event with value of input\n * @param {Event} event - Event object\n * @returns {void}\n */\nconst onInput = (e: Event) => {\n  const target = e.target as HTMLInputElement;\n  state.value = target.value;\n};\n\nwatch(\n  () => props.modelValue,\n  (value) => {\n    state.value = value;\n  },\n  {\n    immediate: true,\n  }\n);\nwatch(\n  () => state.value,\n  (value) => {\n    emit('update:modelValue', value);\n  }\n);\n</script>\n<template>\n  <fieldset>\n    <div\n      :class=\"{\n        textfield__wrapper: true,\n      }\"\n    >\n      <Label\n        :id=\"props.id\"\n        :class=\"{\n          textfield__label: true,\n        }\"\n        :for=\"props.id\"\n        :text=\"props.label\"\n      />\n      <div class=\"input-wrapper\">\n        <div :class=\"classes\">\n          <Icon\n            v-if=\"prependIconName\"\n            :class=\"prependIconClasses\"\n            :name=\"prependIconName\"\n            :size=\"16\"\n          />\n          <input\n            :id=\"props.id\"\n            ref=\"inputRef\"\n            :disabled=\"props.disabled\"\n            :placeholder=\"props.placeholder\"\n            :type=\"typeOfInputRef\"\n            :value=\"state.value\"\n            @blur=\"onBlur\"\n            @focus=\"onFocus\"\n            @input=\"onInput\"\n          />\n          <Icon\n            v-if=\"appendIconName\"\n            :class=\"appendIconClasses\"\n            :color=\"props.iconColor\"\n            :name=\"`${appendIconName}`\"\n            :size=\"16\"\n            @click=\"clickIcon\"\n          />\n        </div>\n        <div class=\"textfield__error\">{{ props.errorMsg }}</div>\n        <div v-if=\"!props.errorMsg\" class=\"textfield__hint\">\n          {{ props.hint }}\n        </div>\n      </div>\n    </div>\n  </fieldset>\n</template>\n"],"names":["inputRef","ref","state","reactive","typeOfInputRef","props","prependIconsOfType","isFocused","isFilled","computed","classes","disabled","loading","clearable","errorMsg","prependIconClasses","hasErrorMsg","appendIconClasses","hasClear","hasValue","_a","prependIconName","prependIcon","type","appendIconName","appendIcon","onFocus","emit","onBlur","clickIcon","setPassType","onInput","target","watch","value"],"mappings":"y0BA0IMA,EAAWC,IAuBXC,EAAQC,EAAS,CACrB,MAAO,EAAA,CACR,EACKC,EAAiBH,EAAII,EAAM,IAAI,EAC/BC,EAAqB,CACzB,SAAU,eACV,MAAO,eACP,IAAK,QACL,IAAK,OACL,OAAQ,MACR,KAAM,EAAA,EAEFC,EAAYN,EAAI,EAAK,EACrBO,EAAWC,EAAS,IAAM,CAAC,CAACP,EAAM,KAAK,EACvCQ,EAAUD,EAAS,IAAM,CAC7B,KAAM,CAAE,SAAAE,EAAU,QAAAC,EAAS,UAAAC,EAAW,SAAAC,GAAaT,EAC5C,MAAA,CACL,UAAW,GACX,mBAAoBS,GAAA,YAAAA,EAAU,OAC9B,qBAAsBF,EACtB,sBAAuBD,EACvB,uBAAwBE,EACxB,mBAAoBN,EAAU,MAC9B,oBAAqBC,EAAS,KAAA,CAChC,CACD,EACKO,EAAqBN,EAAS,KAC3B,CACL,0BAA2B,GAC3B,mCAAoCJ,EAAM,QAC1C,iCAAkCW,EAAY,OAASR,EAAS,KAAA,EAEnE,EACKS,EAAoBR,EAAS,KAC1B,CACL,yBAA0B,GAC1B,gCAAiCS,EAAS,MAC1C,gCAAiCF,EAAY,KAAA,EAEhD,EACKG,EAAWV,EAAS,IACjBP,EAAM,MAAM,OAAS,CAC7B,EACKc,EAAcP,EAAS,IAAM,OACjC,OAAOW,EAAAf,EAAM,WAAN,YAAAe,EAAgB,MAAA,CACxB,EACKF,EAAWT,EAAS,IACjBJ,EAAM,WAAac,EAAS,KACpC,EACKE,EAAkBZ,EAAS,IAAM,CAC/B,KAAA,CAAE,YAAAa,EAAa,KAAAC,CAAS,EAAAlB,EAC1B,OAAAiB,GACGhB,EAAmBiB,EAAA,CAC3B,EACKC,EAAiBf,EAAS,IAAM,CAC9B,KAAA,CAAE,WAAAgB,EAAY,KAAAF,CAAS,EAAAlB,EAC7B,OAAIW,EAAY,MAAc,gBAC1BE,EAAS,OAAS,CAAC,OAAQ,OAAO,EAAE,SAASK,CAAI,EAAU,QAC3DA,IAAS,YAAcnB,EAAe,QAAU,WAC3C,aACLmB,IAAS,YAAcnB,EAAe,QAAU,OAC3C,iBACFqB,CAAA,CACR,EAIKC,EAAU,IAAM,CACpBnB,EAAU,MAAQ,GAClBoB,EAAK,QAAS,CACZ,MAAOzB,EAAM,KAAA,CACd,CAAA,EAKG0B,EAAS,IAAM,CACnBrB,EAAU,MAAQ,GAClBoB,EAAK,OAAQ,CACX,MAAOzB,EAAM,KAAA,CACd,CAAA,EAMG2B,EAAY,IAAM,OACtB,GAAIX,EAAS,MAAO,CAClBhB,EAAM,MAAQ,IACdkB,EAAApB,EAAS,QAAT,MAAAoB,EAAgB,QAChBO,EAAK,cAAe,CAClB,MAAOzB,EAAM,KAAA,CACd,EACD,MACF,CACAyB,EAAK,aAAc,CACjB,MAAOzB,EAAM,KAAA,CACd,EACW4B,GAAA,EAMRA,EAAc,IAAM,CACxB1B,EAAe,MACbA,EAAe,QAAU,WAAa,OAAS,UAAA,EAO7C2B,EAAW,GAAa,CAC5B,MAAMC,EAAS,EAAE,OACjB9B,EAAM,MAAQ8B,EAAO,KAAA,EAGvB,OAAAC,EACE,IAAM5B,EAAM,WACX6B,GAAU,CACThC,EAAM,MAAQgC,CAChB,EACA,CACE,UAAW,EACb,CAAA,EAEFD,EACE,IAAM/B,EAAM,MACXgC,GAAU,CACTP,EAAK,oBAAqBO,CAAK,CACjC,CAAA"}