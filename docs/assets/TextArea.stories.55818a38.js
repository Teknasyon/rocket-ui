import"./jsx-runtime.8b331685.js";import{c as e,A as b,C as f,S as x,a as v,M as A}from"./Props.f6002e18.js";import"./iframe.fe83d79e.js";import{a as w}from"./index.b987ccb9.js";import{d as N,r as M,y as _,a as s,b as c,p as k,k as S,f as V,n as C,t as y}from"./vue.esm-bundler.966918be.js";import{_ as L}from"./Label.d5d3ec69.js";import"./string.bb86dffe.js";import"./es.number.to-fixed.f5ab8707.js";import"./make-decorator.a7c6be5e.js";const q={class:"container"},I=["id","disabled","placeholder","value"],D={key:1,class:"textarea__error"},H={key:2,class:"textarea__hint"},p=N({__name:"TextArea",props:{id:{default:""},modelValue:{default:""},label:{default:""},placeholder:{default:""},disabled:{default:!1},hint:{default:"This is a hint"},errorMsg:{default:""}},emits:["update:modelValue"],setup(l,{emit:r}){const t=l,n=M({value:""});function g(i){r("update:modelValue",i.target.value)}return _(()=>t.modelValue,i=>{n.value=i},{immediate:!0}),(i,E)=>(s(),c("div",q,[t.label?(s(),k(L,{key:0,id:"textarea",class:"textarea__label",for:"textarea",text:t.label},null,8,["text"])):S("",!0),V("textarea",{id:t.id,class:C(["textarea",{"textarea--error":t.errorMsg,"textarea--disabled":t.disabled}]),disabled:t.disabled,placeholder:t.placeholder,value:n.value,onInput:g},null,42,I),t.errorMsg?(s(),c("p",D,y(t.errorMsg),1)):(s(),c("p",H,y(t.hint),1))]))}});p.__docgenInfo={exportName:"default",displayName:"TextArea",description:"",tags:{},props:[{name:"id",description:"id of the textarea",tags:{type:[{title:"type",description:"HTMLAttributes['id']"}],default:[{description:"''",title:"default"}],example:[{description:'<TextArea id="textarea" />',title:"example"}],link:[{description:"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id",title:"link"}]},required:!0,type:{name:"TSIndexedAccessType"},defaultValue:{func:!1,value:"''"}},{name:"modelValue",description:"Input value",tags:{type:[{title:"type",description:"InputHTMLAttributes['value'];"}],default:[{description:"''",title:"default"}],example:[{description:'<TextArea modelValue="Hello" />',title:"example"}],link:[{description:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#value",title:"link"}]},required:!1,type:{name:"TSIndexedAccessType"},defaultValue:{func:!1,value:"''"}},{name:"label",description:"label of the textarea",tags:{type:[{title:"type",description:"LabelHTMLAttributes['label']"}],default:[{description:"''",title:"default"}],example:[{description:'<TextArea label="TextArea" />',title:"example"}],link:[{description:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label",title:"link"}]},required:!1,type:{name:"TSIndexedAccessType"},defaultValue:{func:!1,value:"''"}},{name:"placeholder",description:"Placeholder text",tags:{type:[{title:"type",description:"InputHTMLAttributes['placeholder'];"}],default:[{description:"''",title:"default"}],example:[{description:'<TextArea placeholder="Placeholder" />',title:"example"}],link:[{description:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#placeholder",title:"link"}]},required:!1,type:{name:"TSIndexedAccessType"},defaultValue:{func:!1,value:"''"}},{name:"disabled",description:"Disabled state",tags:{type:[{title:"type",description:"InputHTMLAttributes['disabled'];"}],default:[{description:"false",title:"default"}],example:[{description:"<TextArea disabled />",title:"example"}],link:[{description:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#disabled",title:"link"}]},required:!1,type:{name:"TSIndexedAccessType"},defaultValue:{func:!1,value:"false"}},{name:"hint",description:"Hint text",tags:{type:[{title:"type",description:"string"}],default:[{description:"'This is a hint'",title:"default"}],example:[{description:'<TextArea hint="This is a hint" />',title:"example"}]},required:!1,type:{name:"string"},defaultValue:{func:!1,value:"'This is a hint'"}},{name:"errorMsg",description:"Error message",tags:{type:[{title:"type",description:"string"}],default:[{description:"''",title:"default"}],example:[{description:'<TextArea errorMsg="This is an error" />',title:"example"}]},required:!1,type:{name:"string"},defaultValue:{func:!1,value:"''"}}],events:[{name:"update:modelValue"}]};function m(){return m=Object.assign?Object.assign.bind():function(l){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(l[n]=t[n])}return l},m.apply(this,arguments)}const a=l=>({components:{TextArea:p},setup(){return{args:l,input:w("input")}},template:`
    <TextArea
      v-bind="args"
      @input="input"
    />
  `}),h={errorMsg:{control:{type:"text"},defaultValue:""},label:{control:{type:"text"},defaultValue:"Text Area"},placeholder:{control:{type:"text"},defaultValue:"RocketUI"},modelValue:{control:{type:"text"},defaultValue:""},disabled:{control:{type:"boolean"},defaultValue:!1},hint:{control:{type:"text"},defaultValue:"A form control for editing multi-line text."}},O={Default:a,defaultArgs:h},U="wrapper";function T({components:l,...r}){return e(U,m({},O,r,{components:l,mdxType:"MDXLayout"}),e(A,{title:"Components/TextArea",component:p,argTypes:{...h},mdxType:"Meta"}),e("h1",null,"TextArea"),e("p",null,"The TextArea component is a UI element that allows users to input and edit multiple lines of text."),e("ul",null,e("li",{parentName:"ul"},e("p",{parentName:"li"},e("a",{parentName:"p",href:"#overview"},"Overview"))),e("li",{parentName:"ul"},e("p",{parentName:"li"},e("a",{parentName:"p",href:"#playground"},"Playground"))),e("li",{parentName:"ul"},e("p",{parentName:"li"},e("a",{parentName:"p",href:"#usage"},"Usage with props"))),e("li",{parentName:"ul"},e("p",{parentName:"li"},e("a",{parentName:"p",href:"#stories"},"Stories"))),e("li",{parentName:"ul"},e("p",{parentName:"li"},e("a",{parentName:"p",href:"#tips"},"Tips")))),e("h2",null,"Overview ",e("a",{id:"overview"})),e("p",null,"This component provides a text area for user input and includes several optional props for customization such as error message, disabled state, placeholder text, default value, label, and hint."),e(f,{mdxType:"Canvas"},e(x,{name:"Overview",argTypes:{...a.argTypes},args:{},mdxType:"Story"},a.bind({}))),e("h3",null,"Playground ",e("a",{id:"playground"})),e("blockquote",null,e("p",{parentName:"blockquote"},"Changes you make in the controls will be reflected in the example above.")),e(v,{story:"Overview",exclude:/^(click|tab|on.*)/,mdxType:"ArgsTable"}),e("h2",null,"Usage ",e("a",{id:"usage"})),e("h3",null,"id (required)"),e("p",null,"The ",e("strong",{parentName:"p"},"id")," prop is a unique identifier for the TextArea component."),e("h3",null,"errorMsg (optional)"),e("p",null,"The ",e("strong",{parentName:"p"},"errorMsg")," prop is the error message to display when input is invalid."),e("h3",null,"disabled (optional)"),e("p",null,"The ",e("strong",{parentName:"p"},"disabled")," props is a boolean value that sets the component to a disabled state."),e("h3",null,"placeholder (optional)"),e("p",null,"The ",e("strong",{parentName:"p"},"placeholder")," prop is the placeholder text to display when the text area is empty."),e("h3",null,"modelValue (optional)"),e("p",null,"The ",e("strong",{parentName:"p"},"modelValue")," props is the default value for the text area."),e("h3",null,"label (optional)"),e("p",null,"The ",e("strong",{parentName:"p"},"label")," prop is the text to display as a label for the text area."),e("h3",null,"hint (optional)"),e("p",null,"The ",e("strong",{parentName:"p"},"hint")," prop is for additional information or context for the text area."),e("h2",null,"Stories ",e("a",{id:"stories"})),e("h3",null,"Default"),e(f,{mdxType:"Canvas"},e(x,{name:"Default",argTypes:{...a.argTypes},args:{},mdxType:"Story"},a.bind({}))),e("h3",null,"Tips ",e("a",{id:"tips"})),e("p",null,"\u{1F4A1} Always include the 'id' prop: The 'id' prop is required for the TextArea component to function properly. Make sure to always include it and ensure that it is unique for each instance of the component."),e("p",null,"\u{1F4A1} The 'label' prop is used to provide a text description of the TextArea component for accessibility purposes. This is especially important for users who rely on screen readers to navigate your application."),e("p",null,"\u{1F4A1} The 'placeholder' prop allows you to provide users with an example or a hint of the kind of input you expect. This can be especially helpful for users who may not be sure what to type in the TextArea."),e("p",null,"\u{1F4A1} The 'modelValue' prop allows you to set a default value for the TextArea component. This can be useful if you want to pre-populate the TextArea with a value or if you want to show the last input a user made."),e("p",null,"\u{1F4A1} The 'errorMsg' prop allows you to display an error message when the input is invalid. This can be useful for providing feedback to the user when they make a mistake."),e("p",null,"\u{1F4A1} The 'disabled' prop allows you to disable the textarea. This can be useful when you want to prevent users from making changes or inputting text."),e("p",null,"\u{1F4A1} The 'hint' prop allows you to provide additional context or information about the TextArea component. This can be useful for providing more detailed instructions or information to the user."),e("p",null,"\u{1F4A1} Limit the number of characters that can be entered, to avoid overflowing the layout or taking too much space in the database."),e("p",null,"\u{1F4A1} Make sure the text area is adaptable to different screen sizes, to improve the user experience on different devices"))}T.isMDXComponent=!0;const u=a.bind({});u.storyName="Overview";u.argTypes={...a.argTypes};u.args={};u.parameters={storySource:{source:`args => ({
  components: {
    TextArea
  },

  setup() {
    return {
      args,
      input: action('input')
    };
  },

  template: \`
    <TextArea
      v-bind="args"
      @input="input"
    />
  \`
})`}};const d=a.bind({});d.storyName="Default";d.argTypes={...a.argTypes};d.args={};d.parameters={storySource:{source:`args => ({
  components: {
    TextArea
  },

  setup() {
    return {
      args,
      input: action('input')
    };
  },

  template: \`
    <TextArea
      v-bind="args"
      @input="input"
    />
  \`
})`}};const o={title:"Components/TextArea",component:p,argTypes:{...h},includeStories:["overview","defaultStory"]},z={Overview:"overview",Default:"defaultStory"};o.parameters=o.parameters||{};o.parameters.docs={...o.parameters.docs||{},page:()=>e(b,{mdxStoryNameToKey:z,mdxComponentAnnotations:o},e(T,null))};const F=["Default","defaultArgs","overview","defaultStory"];export{a as Default,F as __namedExportsOrder,o as default,h as defaultArgs,d as defaultStory,u as overview};
//# sourceMappingURL=TextArea.stories.55818a38.js.map
