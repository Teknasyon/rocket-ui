{"version":3,"file":"TabItem.bbeca22f.js","sources":["../../src/components/TabItem/common.ts","../../src/components/TabItem/TabItem.vue"],"sourcesContent":["export type TabItemVariant = 'default' | 'text-only' | 'icon-only';\nexport enum TabItemVariants {\n  DEFAULT = 'default',\n  TEXT_ONLY = 'text-only',\n  ICON_ONLY = 'icon-only',\n}\n","<script setup lang=\"ts\">\nimport Icon from '../Icon/Icon.vue';\nimport { computed, type HTMLAttributes, type ButtonHTMLAttributes } from 'vue';\nimport './tab-item.css';\nimport { TabItemVariants, type TabItemVariant } from './common';\nexport interface IProps {\n  /**\n   * Id of the tab item\n   * @type string | number\n   * @default ''\n   * @example\n   * <TabItem id=\"1\" />\n   */\n  id: string | number;\n\n  /**\n   * Variant of the tab item\n   * @type TabItemVariant\n   * @default TabItemVariants.DEFAULT\n   * @example\n   * <TabItem variant=\"default\" />\n   */\n  variant?: TabItemVariant;\n\n  /**\n   * Label of the tab item\n   * @type string\n   * @default ''\n   * @example\n   * <TabItem label=\"Label\" />\n   */\n  label?: string;\n\n  /**\n   * Icon of the tab item\n   * @type string\n   * @default ''\n   * @example\n   * <TabItem icon=\"icon\" />\n   */\n  icon?: string;\n\n  /**\n   * Disabled state of the tab item\n   * @type ButtonHTMLAttributes['disabled']\n   * @default false\n   * @example\n   * <TabItem disabled />\n   */\n  disabled?: ButtonHTMLAttributes['disabled'];\n\n  /**\n   * Active state of the tab item\n   * @type HTMLAttributes['aria-selected']\n   * @default false\n   * @example\n   * <TabItem active />\n   */\n  active?: HTMLAttributes['aria-selected'];\n\n  /**\n   * Model value of the tab item\n   * @type string | number\n   * @default ''\n   * @example\n   * <TabItem v-model=\"model\" />\n   */\n  modelValue?: string | number;\n}\nconst props = withDefaults(defineProps<IProps>(), {\n  label: '',\n  variant: TabItemVariants.DEFAULT,\n  icon: '',\n  disabled: false,\n  active: false,\n  modelValue: '',\n});\n\nconst emit = defineEmits(['update:modelValue']);\n\nconst classes = computed(() => {\n  return {\n    'tab-item': true,\n    [`tab-item--${props.variant}`]: true,\n  };\n});\n\n/**\n * @description Fires when the tab is clicked\n * @param {id} id - The id of the tab\n * @returns {void}\n */\nfunction onClick(id: number | string) {\n  emit('update:modelValue', id);\n}\n</script>\n<template>\n  <button\n    :aria-disabled=\"props.disabled\"\n    :aria-selected=\"props.active\"\n    :class=\"classes\"\n    :disabled=\"props.disabled\"\n    @click=\"onClick(props.id)\"\n  >\n    <slot name=\"icon\" />\n    <Icon\n      v-if=\"!$slots['icon'] && variant !== TabItemVariants.TEXT_ONLY\"\n      class=\"tab-item__icon\"\n      :name=\"props.icon\"\n      size=\"16\"\n    />\n    <span v-if=\"variant !== TabItemVariants.ICON_ONLY\" class=\"tab-item__label\">\n      {{ props.label }}\n    </span>\n  </button>\n</template>\n"],"names":["TabItemVariants","classes","computed","props","onClick","id","emit"],"mappings":"wJACY,IAAAA,GAAAA,IACVA,EAAA,QAAU,UACVA,EAAA,UAAY,YACZA,EAAA,UAAY,YAHFA,IAAAA,GAAA,CAAA,CAAA,0TC+ENC,EAAUC,EAAS,KAChB,CACL,WAAY,GACZ,CAAC,aAAaC,EAAM,WAAY,EAAA,EAEnC,EAOD,SAASC,EAAQC,EAAqB,CACpCC,EAAK,oBAAqBD,CAAE,CAC9B"}