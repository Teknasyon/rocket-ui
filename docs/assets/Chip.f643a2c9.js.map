{"version":3,"file":"Chip.f643a2c9.js","sources":["../../src/components/Chips/Chip.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport Icon from '../Icon/Icon.vue';\nimport './chip.css';\n\nexport interface Props {\n  /**\n   * Variant of the Chip\n   * @type 'primary' | 'secondary' | 'success' | 'error' | 'warning' | 'info'\n   * @default 'primary'\n   * @example\n   * <Chip variant=\"primary\" />\n   */\n  variant: 'primary' | 'secondary' | 'success' | 'error' | 'warning' | 'info';\n\n  /**\n   * Size of the Chip\n   * @type 'small' | 'medium' | 'large'\n   * @default 'medium'\n   * @example\n   * <Chip size=\"small\" />\n   */\n  size?: 'small' | 'medium' | 'large';\n\n  /**\n   * Label of the Chip\n   * @type string | number\n   * @default 'label'\n   * @example\n   * <Chip label=\"Label\" />\n   */\n  label?: string | number;\n\n  /**\n   * Disabled state of the Chip\n   * @type boolean\n   * @default false\n   * @example\n   * <Chip disabled />\n   */\n  disabled?: boolean;\n\n  /**\n   * Prepend icon of the Chip\n   * @type string\n   * @default ''\n   * @example\n   * <Chip prependIcon=\"icon\" />\n   */\n  prependIcon?: string;\n\n  /**\n   * Append icon of the Chip\n   * @type string\n   * @default ''\n   * @example\n   * <Chip appendIcon=\"icon\" />\n   */\n  appendIcon?: string;\n\n  /**\n   * Ghost state of the Chip\n   * @type boolean\n   * @default false\n   * @example\n   * <Chip ghost />\n   */\n  ghost?: boolean;\n}\nconst props = withDefaults(defineProps<Props>(), {\n  variant: 'primary',\n  size: 'medium',\n  label: 'label',\n  disabled: false,\n  prependIcon: '',\n  appendIcon: '',\n  ghost: false,\n});\nconst emit = defineEmits(['click:chip', 'click:close']);\nconst classes = computed<object>(() => {\n  return {\n    chip: true,\n    'chip--disabled': props.disabled,\n    [`chip__${props.variant}`]: props.variant,\n    [`chip--${props.size}`]: props.size,\n    [`chip__${props.variant}--ghost`]: props.ghost,\n  };\n});\nconst iconSize = computed<string>(() => {\n  if (props.size === 'small') return '10';\n  if (props.size === 'large') return '16';\n  return '12';\n});\nconst clickChip = (e: MouseEvent) => {\n  if (props.disabled) return;\n  emit('click:chip', e);\n};\nconst clickClose = (e: MouseEvent) => {\n  if (props.disabled) return;\n  emit('click:close', e);\n};\n</script>\n<template>\n  <div :class=\"classes\">\n    <div class=\"chip__content\" @click.stop=\"clickChip($event)\">\n      <Icon\n        v-if=\"props.prependIcon\"\n        :aria-disabled=\"props.disabled\"\n        class=\"chip__prepend-icon\"\n        :name=\"props.prependIcon\"\n        :size=\"iconSize\"\n      />\n      <span>{{ props.label }}</span>\n    </div>\n    <Icon\n      v-if=\"props.appendIcon\"\n      :aria-disabled=\"props.disabled\"\n      class=\"chip__append-icon\"\n      :name=\"props.appendIcon\"\n      :size=\"iconSize\"\n      @click.stop=\"clickClose($event)\"\n    />\n  </div>\n</template>\n"],"names":["classes","computed","props","iconSize","clickChip","e","emit","clickClose"],"mappings":"+bA+EMA,EAAUC,EAAiB,KACxB,CACL,KAAM,GACN,iBAAkBC,EAAM,SACxB,CAAC,SAASA,EAAM,WAAYA,EAAM,QAClC,CAAC,SAASA,EAAM,QAASA,EAAM,KAC/B,CAAC,SAASA,EAAM,kBAAmBA,EAAM,KAAA,EAE5C,EACKC,EAAWF,EAAiB,IAC5BC,EAAM,OAAS,QAAgB,KAC/BA,EAAM,OAAS,QAAgB,KAC5B,IACR,EACKE,EAAaC,GAAkB,CAC/BH,EAAM,UACVI,EAAK,aAAcD,CAAC,CAAA,EAEhBE,EAAcF,GAAkB,CAChCH,EAAM,UACVI,EAAK,cAAeD,CAAC,CAAA"}